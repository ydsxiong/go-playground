package lead

import (
	"sync"
	"time"
)

/**
a thread safe in-memory data store
*/
type inMemoryStore struct {
	leads Leads
	mux   sync.RWMutex
}

func NewInMemoryDataStore() *inMemoryStore {
	return new(inMemoryStore)
}

/**
in the context of database store, these two fields: id and createdAt
would have been generated by the database insert operation.
*/
func (s *inMemoryStore) Save(lead Lead) error {
	s.mux.Lock()
	defer s.mux.Unlock()

	lead.ID = uint(len(s.leads) + 1)
	lead.CreatedAt = time.Now()

	s.leads = append(s.leads, lead)
	return nil
}

func (s *inMemoryStore) FindAll() (Leads, error) {
	s.mux.RLock()
	defer s.mux.RUnlock()
	return s.leads.FindAll(), nil
}

func (s *inMemoryStore) FindByEmail(email string) (*Lead, error) {
	s.mux.RLock()
	defer s.mux.RUnlock()
	return s.leads.FindByEmail(email), nil
}
